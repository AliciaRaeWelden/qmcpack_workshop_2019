Example 1: H2O with a DFT nodal surface and NCSU ECP
====================

In this example we will go through the basic steps necessary to
generate DMC input from a pyscf calculation on a simple closed
shell molecule H2O with NCSU ECP and the corresponding vtz basis set.

The pyscf scf script is given below (h2o_ncsu_dft.py in the current directory):

.. code-block:: python

    from pyscf import gto
    from pyscf import scf, dft, df


    mol = gto.Mole()
    mol.verbose = 5
    mol.atom =''' 
      H             0.00000000       0.75720000      -0.46920000
      H             0.00000000      -0.75720000      -0.46920000
      O             0.00000000       0.00000000       0.11730000
    '''
    mol.unit='A'
    mol.basis = {'H': gto.parse('''
    H S
   23.843185 0.00411490
   10.212443 0.01046440
   4.374164 0.02801110
   1.873529 0.07588620
   ...
   '''),
    'O': gto.parse('''
   O S
   54.775216 -0.0012444
   25.616801 0.0107330
   11.980245 0.0018889
   6.992317 -0.1742537
   2.620277 0.0017622
   1.225429 0.3161846
   0.577797 0.4512023
   0.268022 0.3121534
   0.125346 0.0511167
   O S
   ...
   ''')}
    mol.ecp = {'O': gto.basis.parse_ecp('''
    O nelec 2
   O ul
   1 12.30997 6.000000
   3 14.76962 73.85984
   2 13.71419 -47.87600
   O S
   2 13.65512 85.86406
   '''),
    'H':gto.basis.parse_ecp('''
   H nelec 0
   H ul
   1 21.24359508259891 1.00000000000000
   3 21.24359508259891 21.24359508259891
   2 21.77696655044365 -10.85192405303825
   H S
   2 1.000000000000000 0.00000000000000
   ''')
    }
    mol.spin=0 #Value of S where the spin multiplicity is 2S+1
    mol.build()
    #Hartree Fock
    #mf = scf.ROHF(mol)
    #DFT
    mf = dft.ROKS(mol)
    mf.xc ='b3lyp' 

    e_scf=mf.kernel()

    #Section for QMCPACK
    title="H2O_DFT_NCSU"
    from PyscfToQmcpack import savetoqmcpack
    savetoqmcpack(mol,mf,title=title)



It is important to note that Pyscf recognizes most of the XC functionals and basis sets. 
However, in this case, the NCSU ECPs and Basis sets are not yet part of the pyscf data base.
They can be downloaded from : https://pseudopotentiallibrary.org/
For a complete list of refer to Pyscf Manual in https://sunqm.github.io/pyscf/dft.html#


In order to generate the HDF5 necessary to run QMCPACK we call the function "savetoqmcpack" 
located in "qmcpack/src/QMCTools/PyscfToQmcpack.py".  
This will generate an HDF5 file named "$title.h5" (in this case H2O_DFT_NCSU.h5) containing all 
information necessary to run QMCPACK. 
For this call to work, It is important to have "qmcpack/src/QMCTools/" in your PYTHONPATH.

We next run the pyscf calculation using

.. code-block:: bash

    python h2o_ncsu_dft.py  > h2o_ncsu_dft.out

which will yield a converged restricted orbitals DFT total energy of -17.2396300483261 Ha 


The next step is to generate the necessary qmcpack input from this scf calculation. 

.. code-block:: bash

    mpirun -n 1 convert4qmc -pyscf H2O_DFT_NCSU.h5 -production 

This operation will generate 3 files: 
  1- H2O_DFT_NCSU.structure.xml (present in the directory)
	This file contains the system geometry, the number of atoms and the number of electrons.
 
  2- H2O_DFT_NCSU.wfj.xml (present in the directory)
	This file contains the trial wavefunction. The basis set, MO coefficients and all non mutable 
        data are stored in the HDF5 file referenced in the trial wavefunction. Only Jastrow data and 
        important information is kept in the HDF5. This allows a lighter IO and more user friendly inputs.

  3- H2O_DFT_NCSU.qmc.in.xml (present in the directory)
        This file contains what is considered a "standard production" QMC block, from the Jastrow Optimmization 
        blocks, to VMC and DMC blocks. 
        IMPORTANT NOTE: THIS BLOCKS ARE NOT TAILORED FOR THE PROBLEM, MACHINE OR ACCURACY YOU MAY WANT TO REACH
                        THEY ARE TO BE USED AS GUIDE LINES TO BE MODIFIED AS SEEN IN THE FOLLOWING SECTIONS.


In this example, convert4qmc takes 4 arguments;
   1- -pyscf: The code name generating the HDF5. Other options are -QP (quantum package) or -gamess. Note that 
      the option -orbitals is also available and reads natively hdf5 files generated by QP and Pyscf. 
   2- $title.h5: the name of the HDF5 file. 
   3- -production : This flag will force to generate a set of "GUESS" Optimization blocks and VMC and DMC blocks
      for production. Please Note that these blocks are mainly suggestions and should be adapted to the system,
      machine and desired accuracies.
       
You will need to add the ECP files in the XML for QMCPACK to use. These ECP files in the QMCPACK format are provided as H.qmcpp.xml 
and O.qmcpp.xml and can be downloaded from https://pseudopotentiallibrary.org/ .

They appear in the H2O_DFT_NCSU.qmc.in.xml file when defining the hamiltonian.

.. code-block:: xml
  <hamiltonian name="h0" type="generic" target="e">
    <pairpot name="ElecElec" type="coulomb" source="e" target="e" physical="true"/>
    <pairpot name="IonIon" type="coulomb" source="ion0" target="ion0"/>
    <pairpot name="PseudoPot" type="pseudo" source="ion0" wavefunction="psi0" format="xml">
      <pseudo elementType="H" href="../H.qmcpp.xml"/>
      <pseudo elementType="O" href="../O.qmcpp.xml"/>
    </pairpot>
  </hamiltonian>
 

Running QMC:

Step 1- Jastrow Optimization:
In the Optimization directory, we modify slightly the Jastrow to have 20 parameters for the 2 body Jastrow with a cutoff of 10 Angstrom 
and 10 parameters and a cutoff of 5 Angstrom for the one body Jastrow. 

Since the starting parameters for the optimization are significantly bad (0 0 0 0 0 ...) we use 2 loops with different values, 
from "aggressive" to more restrictive.  Note the difference between the used number of samples (8000->80000)  and the value of 
minwalker (0.0001->0.1) between in the input file

.. code-block:: xml
  <loop max="4">
    <qmc method="linear" move="pbyp" checkpoint="-1">
      <parameter name="samples">80000</parameter>
      <parameter name="minwalkers">0.1</parameter>
    </qmc>
  </loop>

The Jastrow Optimization should always be made in 2 steps. First optimizing 1 and 2 body Jastrow (No 3 Bodies), Then in a second 
step adding 3 body Jastrows. This will avoid having to optimize too many parameters in one run and introducing too much instability

In the Optimization directory you will find an Opt.xml file containing the optimization blocks (whill start enumerating outputs 
from 0 to 14). The enumeration is controlled with the tag:

.. code-block:: xml
 
  <project id="H2O_DFT_NCSU" series="0"/>

The outcome of the optimization should generate 15 files named H2O_DFT_NCSU.sXXX.scalar.dat where XXX=000..014
IMPORTANT: The optimized Jastrow Parameters will be in the H2O_DFT_NCSU.sXXX.opt.xml files. These files can replace a wfj.xml Wavefunction
To select the est JAstrow Parameters they need to lead to the lowest VMC energy: 

.. code-block:: bash 
     mpirun -n 1 qmcpack Opt.xml | tee Opt.out
     qmca -q ev *.scalar.dat | sort -k4

                                   LocalEnergy               Variance           ratio 
     H2O_DFT_NCSU  series 1  -16.952183 +/- 0.006669   2.225046 +/- 0.022009   0.1313 
     H2O_DFT_NCSU  series 0  -17.096525 +/- 0.100425   2.254386 +/- 0.606384   0.1319 
     H2O_DFT_NCSU  series 2  -17.187683 +/- 0.002017   0.348122 +/- 0.003547   0.0203 
     H2O_DFT_NCSU  series 4  -17.201283 +/- 0.002302   0.413550 +/- 0.016525   0.0240 
     H2O_DFT_NCSU  series 3  -17.202526 +/- 0.002083   0.366304 +/- 0.006741   0.0213 
     H2O_DFT_NCSU  series 7  -17.202532 +/- 0.002292   0.376960 +/- 0.013003   0.0219 
     H2O_DFT_NCSU  series 5  -17.203145 +/- 0.001451   0.391668 +/- 0.008957   0.0228 
     H2O_DFT_NCSU  series 6  -17.203215 +/- 0.001592   0.388356 +/- 0.013275   0.0226 
     H2O_DFT_NCSU  series 10  -17.203964 +/- 0.001375   0.366203 +/- 0.006412   0.0213 
     H2O_DFT_NCSU  series 8  -17.204103 +/- 0.001615   0.403955 +/- 0.014639   0.0235 
     H2O_DFT_NCSU  series 9  -17.204107 +/- 0.001444   0.371984 +/- 0.007616   0.0216 
     H2O_DFT_NCSU  series 11  -17.204609 +/- 0.001583   0.375518 +/- 0.006082   0.0218 
     H2O_DFT_NCSU  series 13  -17.204887 +/- 0.001647   0.384491 +/- 0.005797   0.0223 
     H2O_DFT_NCSU  series 12  -17.206662 +/- 0.001458   0.377860 +/- 0.009055   0.0220 
     H2O_DFT_NCSU  series 14  -17.206960 +/- 0.001201   0.376994 +/- 0.012357   0.0219 


Series 14 seems to give the lowest energy. In the case, the energy in the series 14 was computed using the Jastrow from the previous round. 
Explanation: At the end of an optimization block N, we generate a series of Jastrow parameters. These will be used to evaluate a VMC energy at Loop N+1.
Therefore if the Energy of Series 14 are what we want to reproduce, we must pick the coefficient computed at series 13

.. code-block:: bash
    cp H2O_DFT_NCSU.s013.opt.xml H2O_DFT_NCSU.wfj.xml


At this point, one needs to uncomment the 3J in the wavefunction file and change the series number to 15 in the opt.xml file and resubmit again


.. code-block:: bash 
     mpirun -n 1 qmcpack Opt.xml | tee Opt.out
     qmca -q ev *.scalar.dat | sort -k4

                              LocalEnergy               Variance           ratio 
     H2O_DFT_NCSU  series 1  -16.952183 +/- 0.006669   2.225046 +/- 0.022009   0.1313 
     H2O_DFT_NCSU  series 19  -17.086395 +/- 0.004705   2.339084 +/- 0.029483   0.1369 
     H2O_DFT_NCSU  series 0  -17.096525 +/- 0.100425   2.254386 +/- 0.606384   0.1319 
     H2O_DFT_NCSU  series 2  -17.187683 +/- 0.002017   0.348122 +/- 0.003547   0.0203 
     H2O_DFT_NCSU  series 4  -17.201283 +/- 0.002302   0.413550 +/- 0.016525   0.0240 
     H2O_DFT_NCSU  series 3  -17.202526 +/- 0.002083   0.366304 +/- 0.006741   0.0213 
     H2O_DFT_NCSU  series 7  -17.202532 +/- 0.002292   0.376960 +/- 0.013003   0.0219 
     H2O_DFT_NCSU  series 5  -17.203145 +/- 0.001451   0.391668 +/- 0.008957   0.0228 
     H2O_DFT_NCSU  series 6  -17.203215 +/- 0.001592   0.388356 +/- 0.013275   0.0226 
     H2O_DFT_NCSU  series 10  -17.203964 +/- 0.001375   0.366203 +/- 0.006412   0.0213 
     H2O_DFT_NCSU  series 8  -17.204103 +/- 0.001615   0.403955 +/- 0.014639   0.0235 
     H2O_DFT_NCSU  series 9  -17.204107 +/- 0.001444   0.371984 +/- 0.007616   0.0216 
     H2O_DFT_NCSU  series 11  -17.204609 +/- 0.001583   0.375518 +/- 0.006082   0.0218 
     H2O_DFT_NCSU  series 13  -17.204887 +/- 0.001647   0.384491 +/- 0.005797   0.0223 
     H2O_DFT_NCSU  series 12  -17.206662 +/- 0.001458   0.377860 +/- 0.009055   0.0220 
     H2O_DFT_NCSU  series 14  -17.206960 +/- 0.001201   0.376994 +/- 0.012357   0.0219 
     H2O_DFT_NCSU  series 16  -17.209466 +/- 0.002443   0.378594 +/- 0.007401   0.0220 
     H2O_DFT_NCSU  series 17  -17.210250 +/- 0.002443   0.472917 +/- 0.018699   0.0275 
     H2O_DFT_NCSU  series 20  -17.211429 +/- 0.002043   0.445033 +/- 0.008557   0.0259 
     H2O_DFT_NCSU  series 22  -17.212446 +/- 0.001407   0.435827 +/- 0.012642   0.0253 
     H2O_DFT_NCSU  series 23  -17.212674 +/- 0.002479   0.469187 +/- 0.016440   0.0273 
     H2O_DFT_NCSU  series 25  -17.213040 +/- 0.002035   0.489033 +/- 0.011526   0.0284 
     H2O_DFT_NCSU  series 27  -17.215119 +/- 0.001202   0.454452 +/- 0.008121   0.0264 
     H2O_DFT_NCSU  series 29  -17.216723 +/- 0.001490   0.470956 +/- 0.020307   0.0274 
     H2O_DFT_NCSU  series 28  -17.216777 +/- 0.001690   0.436631 +/- 0.014319   0.0254 
     H2O_DFT_NCSU  series 26  -17.217729 +/- 0.001966   0.434323 +/- 0.007951   0.0252 
     H2O_DFT_NCSU  series 24  -17.217954 +/- 0.001569   0.407915 +/- 0.008845   0.0237 
     H2O_DFT_NCSU  series 21  -17.218353 +/- 0.002158   0.412844 +/- 0.018898   0.0240 
     H2O_DFT_NCSU  series 18  -17.226017 +/- 0.006922   0.433053 +/- 0.020304   0.0251 
     H2O_DFT_NCSU  series 15  -17.269486 +/- 0.087271   0.324993 +/- 0.074642   0.0188 

In this case Series 15 and 18 while being the lowest in energy  seems to behave as outlayers (too low compared to all other runs,  
They should be discarded  as an outlayer.

Series 21 seems to be better. In the case, the energy in the series 21 was computed using the Jastrow from the previous round. 

Step2- VMC DMC

The VMC directory contains the DMC.xml input file with a VMC block (to select better samples and reduce the DMC equilibration time)
and a DMC block. 

For production run, ne needs to adjust the number of blocks/targetwalkers to reach the desired accuracy. 
It is also necessary to copy the optimizedtrial wavefunction to the correct directory.
In this case and for the AWS, This will lead to the followin answers:

.. code-block:: bash
    cp Optimization/H2O_DFT_NCSU.s020.opt.xml DMC/H2O_DFT_NCSU.wfj.xml
    mpirun -n 1 qmcpack DMC.xml | tee DMC.out 
    qmca -q ev *.scalar.out

                                    LocalEnergy               Variance           ratio 
    H2O_DFT_NCSU  series 0  -17.225782 +/- 0.017659   0.403923 +/- 0.064485   0.0234 
    H2O_DFT_NCSU  series 1  -17.245958 +/- 0.001986   0.426762 +/- 0.004081   0.0247 





